"use strict";(self.webpackChunkxlrte_dev=self.webpackChunkxlrte_dev||[]).push([[87],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,b=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return n?a.createElement(b,i(i({ref:t},c),{},{components:n})):a.createElement(b,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5169:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return c},default:function(){return p}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:6},s="Add a database",d={unversionedId:"getting-started/add-a-database",id:"getting-started/add-a-database",isDocsHomePage:!1,title:"Add a database",description:"Remember how your service looks something like this?",source:"@site/docs/getting-started/add-a-database.md",sourceDirName:"getting-started",slug:"/getting-started/add-a-database",permalink:"/docs/getting-started/add-a-database",editUrl:"https://github.com/xlrte/website/edit/main/docs/getting-started/add-a-database.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Deploy your service",permalink:"/docs/getting-started/deploy"},next:{title:"Add a Pub/Sub topic",permalink:"/docs/getting-started/add-a-pubsub-topic"}},c=[{value:"Note: Adding CloudSQL instances take a long time",id:"note-adding-cloudsql-instances-take-a-long-time",children:[],level:4}],u={toc:c};function p(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"add-a-database"},"Add a database"),(0,o.kt)("p",null,"Remember how your service looks something like this?"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"name: my-shiny-service # the name of your service\nruntime: cloudrun # runtime, at the moment, only cloudrun supported\nspec:\n  base_name: hello-app \n  http:\n    public: true #should this service be publicly accessible?\n    http2: false #should we use http2, for instance for gRPC?\n")),(0,o.kt)("p",null,"To add a database, simply add the following lines to the file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"depends_on:\n  cloudsql: \n  - name: [desired database name]\n    type: postgres\n")),(0,o.kt)("p",null,"Next time you run ",(0,o.kt)("inlineCode",{parentName:"p"},"xlrte apply -e [env]"),", xlrte will do the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create a random username & password as encrypted secrets, stored encrypted in your repository."),(0,o.kt)("li",{parentName:"ul"},"Deploy the secrets in GCP Secret Manager"),(0,o.kt)("li",{parentName:"ul"},"Create a private network for the database to live in."),(0,o.kt)("li",{parentName:"ul"},"Create a serverless VPC connector, for your Cloud Run service to have access to the database."),(0,o.kt)("li",{parentName:"ul"},"Create the actual database instance and postgres database, with the set username and password."),(0,o.kt)("li",{parentName:"ul"},"Connect the GCP Secrets to your Cloud Run instance, together with the IP & database name, through the environment variables:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"DB_[db name]_USER"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"DB_[db name]_PASSWORD"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"DB_[db name]_HOST"),"."),(0,o.kt)("li",{parentName:"ul"},"Database name to connect to will be your ",(0,o.kt)("inlineCode",{parentName:"li"},"[db name]-[env]"),", where the environment is accessible from the ",(0,o.kt)("inlineCode",{parentName:"li"},"XLRTE_ENV")," environment variable.")))),(0,o.kt)("p",null,"That is a whole lot of infrastructure configuration that xlrte does for you by convention!"),(0,o.kt)("h4",{id:"note-adding-cloudsql-instances-take-a-long-time"},"Note: Adding CloudSQL instances take a long time"),(0,o.kt)("p",null,"Please not that CloudSQL instance creation is far from instant. It can take up to 20 minutes in some cases. Please have patience when you add one."))}p.isMDXComponent=!0}}]);