"use strict";(self.webpackChunkxlrte_dev=self.webpackChunkxlrte_dev||[]).push([[354],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(r),f=o,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||a;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3338:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],c={sidebar_position:5},s="Cloud Storage",l={unversionedId:"xlrte-concepts/resources/gcp-resource-settings/cloudstorage",id:"xlrte-concepts/resources/gcp-resource-settings/cloudstorage",isDocsHomePage:!1,title:"Cloud Storage",description:"Cloud Storage provides block storage for files and other data to your services.",source:"@site/docs/xlrte-concepts/resources/gcp-resource-settings/cloudstorage.md",sourceDirName:"xlrte-concepts/resources/gcp-resource-settings",slug:"/xlrte-concepts/resources/gcp-resource-settings/cloudstorage",permalink:"/docs/xlrte-concepts/resources/gcp-resource-settings/cloudstorage",editUrl:"https://github.com/xlrte/website/edit/main/docs/xlrte-concepts/resources/gcp-resource-settings/cloudstorage.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Pub/Sub",permalink:"/docs/xlrte-concepts/resources/gcp-resource-settings/pubsub"}},u=[{value:"service.yaml",id:"serviceyaml",children:[{value:"The <code>owner</code> attribute",id:"the-owner-attribute",children:[],level:3}],level:2},{value:"resources.yaml",id:"resourcesyaml",children:[],level:2}],p={toc:u};function d(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cloud-storage"},"Cloud Storage"),(0,a.kt)("p",null,"Cloud Storage provides block storage for files and other data to your services."),(0,a.kt)("h2",{id:"serviceyaml"},"service.yaml"),(0,a.kt)("p",null,"Cloud Storage buckets are added to the",(0,a.kt)("inlineCode",{parentName:"p"},"depends_on")," section of a service like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"depends_on:\n## omitted part of service definition\n  cloudstorage:\n  - name: baz # name of the bucket\n    public: true # publicly accessible from the internet?\n    owner: true # optional, implicitly true for 'readwrite' buckets, false for 'read'\n    access: readwrite # 'read' or 'readwrite'\n")),(0,a.kt)("h3",{id:"the-owner-attribute"},"The ",(0,a.kt)("inlineCode",{parentName:"h3"},"owner")," attribute"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"owner")," is implicitly ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," for ",(0,a.kt)("inlineCode",{parentName:"p"},"readwrite")," buckets and implicitly ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," for ",(0,a.kt)("inlineCode",{parentName:"p"},"read")," access buckets.\nOnly owned buckets are created by ",(0,a.kt)("em",{parentName:"p"},"xlrte"),", so if there is not a service with ",(0,a.kt)("inlineCode",{parentName:"p"},"readwrite")," privileges to a bucket, you may want to designate a ",(0,a.kt)("inlineCode",{parentName:"p"},"read")," privileged service as the owner, in order to ensure the bucket is created."),(0,a.kt)("h2",{id:"resourcesyaml"},"resources.yaml"),(0,a.kt)("p",null,"The following settings are available to cloud storage buckets (all defaults shown, do not need to be defined if they are good enough):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"context: some-project # project in GCP terms\nregion: europe-west6\nresources:\n  cloudstorage:\n  - name: baz\n    location: US # bucket location, US or EU\n    storage_class: STANDARD # GCS storage class?\n    versioning_enabled: false # versioning of stored files enabled?\n")))}d.isMDXComponent=!0}}]);