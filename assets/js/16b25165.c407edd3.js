"use strict";(self.webpackChunkxlrte_dev=self.webpackChunkxlrte_dev||[]).push([[485],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),m=o,f=p["".concat(i,".").concat(m)]||p[m]||d[m]||s;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=p;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<s;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5849:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var r=n(7462),o=n(3366),s=(n(7294),n(3905)),a=["components"],c={sidebar_position:3},i="Cloud SQL",l={unversionedId:"xlrte-concepts/resources/gcp-resource-settings/cloudsql",id:"xlrte-concepts/resources/gcp-resource-settings/cloudsql",isDocsHomePage:!1,title:"Cloud SQL",description:"Currently, only Postgres databases are supported by xlrte. When you add a Cloud SQL dependency to a service, we will automatically create the following:",source:"@site/docs/xlrte-concepts/resources/gcp-resource-settings/cloudsql.md",sourceDirName:"xlrte-concepts/resources/gcp-resource-settings",slug:"/xlrte-concepts/resources/gcp-resource-settings/cloudsql",permalink:"/docs/xlrte-concepts/resources/gcp-resource-settings/cloudsql",editUrl:"https://github.com/xlrte/website/edit/main/docs/xlrte-concepts/resources/gcp-resource-settings/cloudsql.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Runtime: Cloud Run",permalink:"/docs/xlrte-concepts/resources/gcp-resource-settings/cloudrun"},next:{title:"Pub/Sub",permalink:"/docs/xlrte-concepts/resources/gcp-resource-settings/pubsub"}},u=[{value:"service.yaml",id:"serviceyaml",children:[],level:2},{value:"resources.yaml",id:"resourcesyaml",children:[],level:2}],d={toc:u};function p(e){var t=e.components,n=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"cloud-sql"},"Cloud SQL"),(0,s.kt)("p",null,"Currently, only Postgres databases are supported by ",(0,s.kt)("em",{parentName:"p"},"xlrte"),". When you add a Cloud SQL dependency to a service, we will automatically create the following:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"A private network to ensure the DB is secure"),(0,s.kt)("li",{parentName:"ul"},"Username and password secrets"),(0,s.kt)("li",{parentName:"ul"},"A serverless VPC so your service can connect to the database"),(0,s.kt)("li",{parentName:"ul"},"The database instance and database itself")),(0,s.kt)("h2",{id:"serviceyaml"},"service.yaml"),(0,s.kt)("p",null,"A Cloud SQL database is added in the ",(0,s.kt)("inlineCode",{parentName:"p"},"depends_on")," section of a service like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"## omitted part of service definition\ndepends_on:\n  cloudsql: \n  - name: my-pg-db\n    type: postgres\n")),(0,s.kt)("p",null,"This is all you need. But you can optionally define environment specific settings in ",(0,s.kt)("inlineCode",{parentName:"p"},"resources.yaml"),", as below:"),(0,s.kt)("h2",{id:"resourcesyaml"},"resources.yaml"),(0,s.kt)("p",null,"Below we show the available settings. All settings show their defaults, so if you want them, they can all be omitted."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"context: some-project # project in GCP terms\nregion: europe-west6\nstate_store: some-bucket\nresources:\n  cloudsql:\n  - name: my-pg-db\n    machine_type: db-f1-micro # GCP machine type, default is db-f1-micro\n    size: 20 # GB size of db, default 10\n    delete_protection: false # default false\n    maintenance_window_hour: 7 # default 7, 07:00\n    maintenance_window_day: 7 # default 7, sunday\n    point_in_time_recovery_enabled: false # default false\n    backup_enabled: true # defaults to true\n    backup_start_time: \"04:00\" # time of backups to be started\n  # vpc connector resources are optional, and define the resources of the VPC access\n  # between the services and the database instances.\n  vpc_access_connector:\n    min_instances: 2 # default and minimum 2, must be lower than max_instances\n    max_instances: 3 # default and minimum 3, max 10\n    instance_type: e2-standard-4 # default is 'f1-micro', 'e2-standard-4' gives more bandwidth processing ability\n")))}p.isMDXComponent=!0}}]);