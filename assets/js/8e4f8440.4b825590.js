"use strict";(self.webpackChunkxlrte_dev=self.webpackChunkxlrte_dev||[]).push([[270],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(r),m=o,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return r?n.createElement(f,s(s({ref:t},u),{},{components:r})):n.createElement(f,s({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8286:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),s=["components"],i={sidebar_position:3},c="What are Resources?",l={unversionedId:"xlrte-concepts/resources",id:"xlrte-concepts/resources",isDocsHomePage:!1,title:"What are Resources?",description:"Resources are the services, such as databases, messaging middleware, block storage services (GCS, S3) etc that a service could depend on.",source:"@site/docs/xlrte-concepts/resources.md",sourceDirName:"xlrte-concepts",slug:"/xlrte-concepts/resources",permalink:"/docs/xlrte-concepts/resources",editUrl:"https://github.com/xlrte/website/edit/main/docs/xlrte-concepts/resources.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Secrets",permalink:"/docs/xlrte-concepts/secrets"},next:{title:"Google Cloud Platform Resources",permalink:"/docs/xlrte-concepts/resources/gcp-resource-settings/gcp"}},u=[{value:"Example: a Postgres database",id:"example-a-postgres-database",children:[],level:2}],p={toc:u};function d(e){var t=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"what-are-resources"},"What are Resources?"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Resources")," are the services, such as databases, messaging middleware, block storage services (GCS, S3) etc that a service could depend on."),(0,a.kt)("p",null,"Typically resources will be identified by name and have two sets of configurations:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Service configuration, in the ",(0,a.kt)("inlineCode",{parentName:"li"},"depends_on")," block."),(0,a.kt)("li",{parentName:"ul"},"Environment specific configuration in ",(0,a.kt)("inlineCode",{parentName:"li"},"resources.yaml"),", which tells of environment specific resources.")),(0,a.kt)("p",null,"The latter may not be necessary for all resources, and is not necessary for non-production environments, as all resources come pre-configured with sensible defaults for a cheap-to-run, low volume environment. However, where they are required, they will be separated as above, in order to enforce ",(0,a.kt)("em",{parentName:"p"},"separation of concerns"),"."),(0,a.kt)("h2",{id:"example-a-postgres-database"},"Example: a Postgres database"),(0,a.kt)("p",null,"Say we wanted to add a postgres database as a dependency to a service, we might add something like this to the ",(0,a.kt)("inlineCode",{parentName:"p"},"service.yaml")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"depends_on:\n  cloudsql: \n  - name: my-pg-db\n    type: postgres\n\n")),(0,a.kt)("p",null,"Because GCP's ",(0,a.kt)("inlineCode",{parentName:"p"},"CloudSQL")," service is one that requires some settings to define resources allocated, we could have the following in an environment specific file, such as ",(0,a.kt)("inlineCode",{parentName:"p"},".xlrte/config/environments/prod/resources.yaml"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"\n cloudsql:\n  - name: my-pg-db \n    machine_type: db-n1-standard-4\n    storage_size: 50\n")),(0,a.kt)("p",null,"This would tell GCP to allocate 50GB of db storage, using a ",(0,a.kt)("inlineCode",{parentName:"p"},"db-n1-standard-4")," instance. There are more configuration options available, which you can find in the ",(0,a.kt)("inlineCode",{parentName:"p"},"GCP Resource Reference")," section of this documentation."))}d.isMDXComponent=!0}}]);